{"version":3,"sources":["view/HeadTable/HeadTable.js","shared/utilities.js","view/BodyTable/BodyTable.js","view/Table.js","entities/user.js","view/Loader/Loader.js","view/Pagination/Pagination.js","App.js","index.js"],"names":["HeadTable","headings","onChange","sort","query","className","map","heading","i","onClick","type","e","target","value","checked","checkedTrue","name","checkedFalse","convertDate","date","dateOfBirth","Date","y","getFullYear","m","getMonth","d","getDate","convertTime","getTime","hide","input","str","slice","number","length","BodyTable","data","users","user","fullName","isActive","registered","balance","state","country","id","Table","User","this","toString","Loader","Pagination","usersPerPage","totalUsers","paginate","currentPage","setCurrentPage","setUsersPerPage","pages","Math","ceil","buttons","previous","next","pageNumbers","push","App","useState","setData","filteredData","setFilteredData","setQuery","error","setError","useEffect","fetch","then","response","json","temp","concat","apply","merged","catch","Object","keys","filter","el","indexOfLastUser","indexOfFirstUser","currentUsers","table","filtered","fullNameValue","isCheckedTrueValue","isCheckedFalseValue","registeredValue","balanceValue","stateValue","countryValue","toLowerCase","includes","isActiveMatch","search","order","tempData","sorted","a","b","pageNumber","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86a7607b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './HeadTable.css';\r\n\r\nconst HeadTable = ({ headings, onChange, sort, query }) => {\r\n    \r\n    return (\r\n        <thead>\r\n            <tr className=\"table-head\">\r\n                {headings && headings.map((heading, i) => {\r\n                                    \r\n                        return <th key={heading} className={`column${i+1}`}>\r\n            \r\n                                    {(heading === 'registered' || heading === 'balance') \r\n                                    && <i className='fa fa-arrow-up right' onClick={()=> sort(heading)}></i>}\r\n\r\n                                    {heading}\r\n\r\n                                    {(heading === 'registered' || heading === 'balance') \r\n                                    && <i className='fa fa-arrow-down left' onClick={()=> sort(heading, 'asc')}></i>} \r\n\r\n                                    { heading !== 'isActive' && <input type='text' onChange={ (e) => onChange(e.target.value, heading)}/>}\r\n\r\n                                    {heading === 'isActive' &&\r\n                                    <>\r\n                                        <div className='check'>\r\n                                            <input type=\"checkbox\" checked={query.checkedTrue} name=\"checkedTrue\" onChange={ (e) => onChange(e.target.checked, 'checkedTrue')}/> true\r\n                                        </div>\r\n                                        <div className='check'>\r\n                                            <input type=\"checkbox\" checked={query.checkedFalse} name=\"checkedFalse\" onChange={ (e) => onChange(e.target.checked, 'checkedFalse')}/> false\r\n                                        </div>\r\n                                    </>\r\n                                    }\r\n                                </th>\r\n                })}\r\n            </tr>\r\n        </thead>      \r\n    )\r\n};\r\n\r\nexport default HeadTable;","const convertDate = (date) => {\r\n\r\n    const dateOfBirth = new Date(date);\r\n    const y = dateOfBirth.getFullYear();\r\n    let m = dateOfBirth.getMonth() + 1;\r\n    let d = dateOfBirth.getDate();\r\n    d = d<10 ? `0${d}` : d;\r\n    m = m<10 ? `0${m}` : m;\r\n    return (\r\n        `${y}-${m}-${d}`\r\n    )\r\n};\r\n\r\nconst convertTime = (date) => {\r\n    const time = new Date(date);\r\n    return (time.getTime())\r\n};\r\n\r\nconst hide = (input) => {\r\n    let str = input.slice(1);\r\n    let number = \"\";\r\n   \r\n    for (let i = 0; i < str.length; i++) {\r\n        if (str[i] !== \",\") {\r\n            number += str[i];\r\n        }\r\n    }\r\n    return +number;\r\n};\r\n\r\nexport { convertDate, hide, convertTime };","import React from 'react';\r\n\r\nimport './BodyTable.css';\r\nimport { convertDate } from '../../shared/utilities';\r\n\r\nconst BodyTable = ({ data }) => {\r\n    \r\n    let users = <tr className='no_data'><td>Sorry, that data does not exist &#x1F610;</td></tr>;\r\n\r\n    if(data.length){\r\n        users = data.map(user => (\r\n            <tr key={user.id}>\r\n                <td className='column1'>{user.fullName}</td>\r\n                <td className='column2'>{user.isActive}</td>\r\n                <td className='column3'>{convertDate(user.registered)}</td>\r\n                <td className='column4'>{user.balance}</td>\r\n                <td className='column5'>{user.state}</td>\r\n                <td className='column6'>{user.country}</td>\r\n            </tr>\r\n        ))\r\n    }\r\n    return (\r\n            <tbody>            \r\n                {users}\r\n            </tbody>\r\n    )\r\n};\r\n\r\nexport default BodyTable;","import React from \"react\";\r\n\r\nimport \"./Table.css\";\r\nimport HeadTable from \"./HeadTable/HeadTable\";\r\nimport BodyTable from \"./BodyTable/BodyTable\";\r\n\r\nconst Table = ({ data, headings, onChange, sort, query }) => {\r\n  return (\r\n    <div className=\"table\">\r\n      <table>\r\n        <HeadTable\r\n          headings={headings}\r\n          onChange={onChange}\r\n          sort={sort}\r\n          data={data}\r\n          query={query}\r\n        />\r\n        <BodyTable data={data} />\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","class User{\r\n    constructor(user, state, country){\r\n        this.id = user.id;\r\n        this.fullName = user.fullName;\r\n        this.isActive = user.isActive.toString();\r\n        this.registered = user.registered;\r\n        this.balance = user.balance;\r\n        this.state = state.name;\r\n        this.country = country.country;\r\n    }\r\n};\r\n\r\nexport { User };","import React from 'react';\r\nimport './Loader.css';\r\n\r\nconst Loader = () => {\r\n    return(\r\n        <div className=\"sk-folding-cube\">\r\n            <div className=\"sk-cube1 sk-cube\"></div>\r\n            <div className=\"sk-cube2 sk-cube\"></div>\r\n            <div className=\"sk-cube4 sk-cube\"></div>\r\n            <div className=\"sk-cube3 sk-cube\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader;","import React from 'react';\r\nimport './Pagination.css';\r\n\r\nconst Pagination = ({ usersPerPage, totalUsers, paginate, currentPage, setCurrentPage, setUsersPerPage }) => {\r\n\r\n  const pages = Math.ceil(totalUsers / usersPerPage);\r\n  let buttons = currentPage === 1 ? currentPage - 1 : currentPage - 2;\r\n  let previous = currentPage === 1 ? 1 : currentPage - 1;\r\n  let next = currentPage === pages ? pages : currentPage + 1;\r\n  \r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= pages; i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n      <div className='pagination'>\r\n        <div className='btn'>\r\n\r\n          <button className='button' onClick={() => {\r\n            setUsersPerPage(20)\r\n            if(totalUsers<=20)return setCurrentPage(1)\r\n            if(usersPerPage === 20)return\r\n            if(usersPerPage===50 && currentPage===Math.ceil(totalUsers/50))return setCurrentPage(Math.ceil(totalUsers/20))\r\n            if(usersPerPage === 100 && currentPage===Math.ceil(totalUsers/100))return setCurrentPage(Math.ceil(totalUsers/20))\r\n            setCurrentPage(Math.ceil(usersPerPage*currentPage/20))\r\n            }}>20</button>\r\n\r\n          <button className='button' onClick={() => {\r\n            setUsersPerPage(50)\r\n            if(totalUsers<=50)return setCurrentPage(1)\r\n            if(usersPerPage === 50)return\r\n            if(usersPerPage===100 && currentPage===Math.ceil(totalUsers/100))return setCurrentPage(Math.ceil(totalUsers/50))\r\n            setCurrentPage(Math.ceil(usersPerPage*currentPage/50))\r\n            }}>50</button>\r\n\r\n          <button className='button' onClick={() => {\r\n            setUsersPerPage(100)\r\n            if(usersPerPage === 100)return\r\n            setCurrentPage(Math.ceil(usersPerPage*currentPage/100))\r\n            }}>100</button>\r\n        </div>\r\n\r\n        <button className='button' onClick={() => setCurrentPage(previous)}><i className=\"fa fa-arrow-left\"></i></button>\r\n        \r\n        {pageNumbers.map(number => (\r\n          <button key={number} onClick={() => paginate(number)} className='button'>\r\n            {number}\r\n          </button>\r\n        )).slice(buttons, currentPage+5)}\r\n        \r\n        <button className='button' onClick={() => setCurrentPage(next)}><i className=\"fa fa-arrow-right\"></i></button>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;","import React, { useState, useEffect } from \"react\";\n\nimport \"./App.css\";\nimport Table from \"./view/Table\";\nimport { User } from \"./entities/user\";\nimport { convertTime, hide } from \"./shared/utilities\";\nimport Loader from \"./view/Loader/Loader\";\nimport Pagination from \"./view/Pagination/Pagination\";\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [query, setQuery] = useState({\n    fullName: \"\",\n    registered: \"\",\n    balance: \"\",\n    state: \"\",\n    country: \"\",\n    checkedTrue: true,\n    checkedFalse: true,\n  });\n  const [currentPage, setCurrentPage] = useState(1);\n  const [usersPerPage, setUsersPerPage] = useState(20);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    fetch(\"https://fww-demo.herokuapp.com/\")\n      .then((response) => response.json())\n      .then((data) => {\n        const users = data.map((country) =>\n          country.state.map((state) =>\n            state.users.map((user) => new User(user, state, country))\n          )\n        );\n        const temp = [].concat.apply([], users);\n        const merged = [].concat.apply([], temp);\n        setData(merged);\n        setFilteredData(merged);\n      })\n      .catch(() => setError(true));\n  }, []);\n\n  const headings = data[0] && Object.keys(data[0]).filter((el) => el !== \"id\");\n\n  const indexOfLastUser = currentPage * usersPerPage;\n  const indexOfFirstUser = indexOfLastUser - usersPerPage;\n  const currentUsers = filteredData.slice(indexOfFirstUser, indexOfLastUser);\n\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  const search = (value, heading) => {\n    setCurrentPage(1);\n    return data.filter((user) => {\n      const fullNameValue = heading === \"fullName\" ? value : query.fullName;\n      const isCheckedTrueValue = heading === \"checkedTrue\" ? value : query.checkedTrue;\n      const isCheckedFalseValue = heading === \"checkedFalse\" ? value : query.checkedFalse;\n      const registeredValue = heading === \"registered\" ? value : query.registered;\n      let balanceValue = heading === \"balance\" ? value : query.balance;\n      const stateValue = heading === \"state\" ? value : query.state;\n      const countryValue = heading === \"country\" ? value : query.country;\n\n      const fullName = user.fullName\n        .toLowerCase()\n        .includes(fullNameValue.toLowerCase());\n\n      let isActiveMatch = \"all\";\n      if (isCheckedTrueValue && !isCheckedFalseValue) {\n        isActiveMatch = true;\n      }\n      if (!isCheckedTrueValue && isCheckedFalseValue) {\n        isActiveMatch = false;\n      }\n\n      const isActive =\n        isActiveMatch !== \"all\" ? user.isActive.includes(isActiveMatch) : true;\n\n      const registered = user.registered.includes(registeredValue);\n\n      if (balanceValue.length >= 4) {\n        if (balanceValue[1] === \",\") {\n          balanceValue = balanceValue.slice(0, 1) + balanceValue.slice(2);\n        }\n        balanceValue = balanceValue.slice(0, 1) + \",\" + balanceValue.slice(1);\n      }\n      const balance = user.balance.includes(balanceValue);\n\n      const state = user.state\n        .toLowerCase()\n        .includes(stateValue.toLowerCase());\n\n      const country = user.country\n        .toLowerCase()\n        .includes(countryValue.toLowerCase());\n\n      return fullName && registered && balance && state && country && isActive;\n    });\n  };\n\n  const onChange = (value, heading) => {\n    setQuery({ ...query, [heading]: value });\n    const filtered = search(value, heading);\n    setFilteredData(filtered);\n  };\n\n  const sort = (type, order) => {\n    setCurrentPage(1);\n    const tempData = [...data];\n\n    let sorted = null;\n    if (type === \"balance\") {\n      if (order === \"asc\") {\n        sorted = filteredData.sort((a, b) => hide(a.balance) - hide(b.balance));\n      } else {\n        sorted = filteredData.sort((a, b) => hide(b.balance) - hide(a.balance));\n      }\n    } else {\n      if (order === \"asc\") {\n        sorted = filteredData.sort(\n          (a, b) => convertTime(a.registered) - convertTime(b.registered)\n        );\n      } else {\n        sorted = filteredData.sort(\n          (a, b) => convertTime(b.registered) - convertTime(a.registered)\n        );\n      }\n    }\n    setFilteredData(sorted);\n    setData(tempData);\n  };\n\n  let table = error ? (\n    <h1 className=\"error\">Something went wrong &#x1F610;</h1>\n  ) : (\n    <Loader />\n  );\n\n  if (data.length) {\n    table = (\n      <>\n        <Table\n          data={currentUsers}\n          headings={headings}\n          onChange={onChange}\n          sort={sort}\n          query={query}\n        />\n        <Pagination\n          usersPerPage={usersPerPage}\n          totalUsers={filteredData.length}\n          paginate={paginate}\n          currentPage={currentPage}\n          setCurrentPage={setCurrentPage}\n          setUsersPerPage={setUsersPerPage}\n        />\n      </>\n    );\n  }\n\n  return <div className=\"limiter\">{table}</div>;\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}